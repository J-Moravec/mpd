% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.r
\name{install_github}
\alias{install_github}
\title{Install package from github}
\usage{
install_github(x, branch = NULL)
}
\arguments{
\item{x}{input in the form of owner/repo, such as `J-Moravec/mpd`.}

\item{branch}{**optional** a git branch to download the repo from, if not specified,
additional http request is performed to retrieve the default branch from metadata.}
}
\value{
Invisible `NULL`
}
\description{
A simple wrapper around [utils::install.packages()] to install packages from github.
}
\details{
This functions wraps `utils::install.packages(url, repos = NULL)` which allows
installing packages directly from the `url`, provided it has correct format
(tarball). This means that the package dependencies
are not installed, see the `repos` option in `?install_packages` for more details.

Another limitation is that the package must be at the very root of the repository.
For instance, if the package is inside the `pkg` folder of the repository (e.g., `tinytest`),
the package cannot be installed.

The `branch` parameter specified from which git branch is the package installed.
If `branch = NULL` (the default), an extra request is performed through the github API
to read the metadata on the default branch (typically `master` or `main`).
If this fails for some reason, or you wish to not make an extra request, specify the branch
manually.
}
\examples{
\dontrun{
  install_github("J-Moravec/mpd") # install the latest version of mpd
}

}
\seealso{
[utils::install_packages()] for the underlying function,
[remotes::install_github()] for a more complex and feature-full version
[pak::pak()] for a modern way to install packages
}
